# Command to run for kitinerary-extractor (without any extra arguments)
command = "flatpak run org.kde.kitinerary-extractor"

# Path to directory with additional extractor scripts, if desired
additional_extractors = "~/kitinerary-extractor-scripts/scripts/"


[input]
# Configuration options related to input, ie, how we get the emails.

# Path to a Maildir-formatted directory OR an mbox-formatted file, containing new emails to check.
# Only one may be specified.
maildir = "~/Mail"
# mbox = "~/mbox"

# Whether to delete emails from the maildir once we are done processing them
delete_processed_emails = false


[output]
# Configuration options related to output, ie, what we do with the calendar.

[output.caldav]
# Use CalDAV client to add events to a calendar directly.

# CalDAV server URL
url = "https://example.org/caldav"
# Name of calendar (one will be created if not found at the above URL)
calendar_name = "example_calendar"
# Username for authenticating with CalDAV server
username = "example"
# Command to get password
password_cmd = "pass show caldav"


[preprocess]

# Configuration options related to preprocessing, ie, manipulating the email before it is fed to kitinerary-extractor.

[preprocess.headers]

# Replace the content of the "From" header with the content of the "X-AnonAddy-Original-Sender" header, if the latter is
# present. You can specify further header replacements as desired. This can help to get extractor scripts to match on
# emails that have been forwarded.
"X-AnonAddy-Original-Sender" = "From"


[postprocess]

# Configuration options related to postprocessing, ie, augmenting the data returned by kitinerary-extractor.

# Email addresses to add as attendees to events
attendees = [
    "name@example.net"
]

# The below sub-headings map to those sub-types of Reservation in the schema.org ontology that are supported by
# KItinerary. Configuration options under each sub-heading will apply only where the data returned is of that type.
# See https://schema.org/Reservation and https://invent.kde.org/pim/kitinerary/-/blob/master/src/lib/jsapi/jsonld.h

[postprocess.FoodEstablishmentReservation]

# Duration to use for an event if no duration or end time is found, in HH:MM:SS format.
default_duration = "02:00:00"
# List of alarms to include with event. Expressed as a length of time before the start time, in HH:MM:SS format.
alarms = ["01:00:00"]
# List of categories to include with event.
categories = ["Meal"]

[postprocess.FlightReservation]

alarms = ["04:00:00", "01:00:00"]
categories = ["Travel"]